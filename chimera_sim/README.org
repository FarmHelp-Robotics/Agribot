* chimera_sim
Package for simulation and testing out the robot.

* Dependencies
For tracks to work, you'll need Gazebo from OSRF's repositories, which has the necessary plugin for controlling and simulation of tracks.
#+BEGIN_SRC bash
  sudo apt update && apt install -y wget
  sudo echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list
  wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
  sudo apt update
  # should show an update for Gazebo and related packages
  sudo apt upgrade -y
#+END_SRC
  
For getting cmd_vel topic from ROS through to Gazebo, the [[https://github.com/lprobsth/gazebo_ros_tracked_vehicle_interface][gazebo_ros_tracked_vehcile_interface]] plugin by lprobsth is required. For the end_effector, there is a mimic joint from [[roboticsgroup_upatras_gazebo_plugins]] plugin collection to model the fact that the fingers are actuated together.

For all this to work well, clone all these into /src and then ensure dependencies are installed, and catkin_make away:

#+BEGIN_SRC bash
  cd /path/to/agribot_ws/src
  git clone https://github.com/lprobsth/gazebo_ros_tracked_vehicle_interface.git
  cd /path/to/agribot_ws/

  apt install roboticsgroup-upatras-gazebo-plugins
  rosdep install --from-paths src --ignore-src -r -y
  catkin_make
#+END_SRC

* Running
To launch the simulation and controllers:
#+BEGIN_SRC bash 
  rosrun chimera_sim chimera.launch
#+END_SRC

Ensure you've got teleop-twist-keyboard package installed to control the robot.
#+BEGIN_SRC bash 
  rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=/chimera/cmd_vel
#+END_SRC

In a terminal, try sending commands to the position controllers:
#+BEGIN_SRC bash
  rostopic list
  # should show a bunch of position controllers

  # use something like this to play around with the joints
  rostopic pub -1 /joint21_position_controller/command std_msgs/Float64 "data: 3.14"
#+END_SRC

* TODO Note on Accuracy
WIP to make it as physically accurate as possible. As off now, the weights are guesses.

* Acknowledgments
- https://github.com/elephantrobotics/mycobot_ros/pull/47/files#diff-376dbc4a3acb2831ff5adea9612541636ce126703a5f9477713e5dd388a4e196, is what was referenced for some of the inertial things
  The formulae moments of inertia for simple shapes can be found here: https://en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors
- Integrated the tracks was referenced from https://github.com/clubcapra/markhor which was found through https://github.com/gazebosim/gazebo-classic/issues/2910
- Elephant Robotics's [[https://github.com/elephantrobotics/mycobot_ros][mycobot]] project for the starting point of the arm urdfs, and Yahboom's [[https://github.com/YahboomTechnology/Transbot_Jetson][Transbot Jetson]] for the starting point for the moving base
